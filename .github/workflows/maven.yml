# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package -Dmaven.test.skip=true --file pom.xml
        
    - name: copy file via ssh password
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.APP_SERVER }}
        username: root
        password: ${{ secrets.APP_SECRET }}
        source: "./target/truck-billing-0.0.1.jar"
        target: "/root/truck-java"
        
    - name: ssh pipelines
      uses: cross-the-world/ssh-pipeline@master
      env:
        WELCOME: "ssh pipeline"
      with:
        host: ${{ secrets.APP_SERVER }}
        user: root
        pass: ${{ secrets.APP_SECRET }}
        port: 22
        connect_timeout: 10s
        script: |
          (rm -rf /home/github/test || true)
          ls -la  
          echo $WELCOME 
          mkdir -p /home/github/test/test1 && 
          mkdir -p /home/github/test/test2 &&

    

